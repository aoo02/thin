@use "backend" as *;
/* Begin Modals */
:is(#{c(main dark)},#{c(main light)}) {
	#{c(modals root)} {
		background-color: transparent;
		box-shadow: none;
		backdrop-filter: blur(5px);
	}
	#{c(modals createEventPreviewCard)} {
		@include card;
	}
	:is(#{c(modals searchResultsGroup)},#{c(modals searchDatePicker)},#{c(modals footer)},#{c(modals inviteFromBrowserContentWrapper)},#{c(modals reactionReactors)}) {
		background-color: $middle;
	}
	:is(#{c(modals unpinMessage)},#{c(modals regionSelectDropdown)}) {
		@include card;
		box-shadow: none;
	}
	:is(#{c(modals shortcutsModal)},#{c(modals autocomplete)},#{c(modals boostTierPill)},#{c(modals contentWarningFooter)}) {
		background-color: transparent;
	}
	#{c(modals quickSwitchModal)} {
		backdrop-filter: none;
		min-height: 365px;
	}
	// search has a lot of theme-d/l beforehand.
	#{c(modals searchDropdown)} {
		background-color: transparent;
		box-shadow: none;
		backdrop-filter: blur(5px);
		position: relative;
		top: 4px;
	}
	#{c(modals searchOption)}::after {
		content: none;
	}
	#{c(modals searchQueryHeader)} {
		background-color: $header;
	}
	#{c(modals searchDatePicker)} #{c(modals searchDatePickerHint)} :is(#{c(modals searchDateHintValue)},#{c(modals searchDateHintValue)}:hover) {
		background-color: $primary;
	}
	#{c(modals reactionsSidebar)} {
		background-color: $side;
	}
	#{c(modals reactionDefault)}:hover {
		background-color: var(--background-modifier-hover);
	}
	:is(#{c(modals reactionDefault)}:active,#{c(modals reactionSelected)}) {
		background-color: var(--background-modifier-active);
	}
	#{c(modals contentWarningPopout)} {
		backdrop-filter: blur(5px);
		background-color: $card;
		box-shadow: none;
	}
}
#{c(modals header)} {
	background-color: $header;
}
#{c(modals close)} {
	opacity: 1;
}
#{c(modals closeIcon)} {
	color: $primary;
	&:hover {
		color: $hover;
	}
}
#{c(modals body)} {
	background-color: $middle;
}
#{c(modals divider)} {
	display: none;
}
// fuckers have the close button moved.
#{c(modals createChannelHeader)} {
	margin: 0;
	#{c(modals createChannelClose)} {
		top: 14px;
	}
}
#{c(modals createChannelSearchBar)} {
	background-color: $card;
	#{c(modals createChannelTag)} {
		background-color: transparent;
		border: 1px solid $primary;
	}
}
#{c(modals createEventProgressBarSelected)} {
	background-color: $primary;
}
#{c(modals eventCard)},
#{c(modals eventCard)}:hover {
	background-color: $card;
	border-color: $primary;
}
#{c(modals eventInfoHeader)} {
	background-color: $header;
}
#{c(modals warningCard)} {
	background-color: $yellow;
	border-color: $yellow;
}
#{c(modals inviteFromBrowserInviteSplash)} {
	background-color: $middle;
}
#{c(modals pillIconOnline)} {
	background-color: $green;
}
#{c(modals pillIconTotal)} {
	background-color: $offline;
}
#{c(modals inviteScroller)} {
	background-color: $middle;
}
#{c(modals timeoutDurationGroupBar)} {
	#{c(modals timeoutDuration)} {
		@include card;
		&:hover {
			background-color: $hover;
		}
		&#{c(modals timeoutDurationSelected)} {
			background-color: $primary;
		}
	}
}
#{c(modals incomingCall)} {
	@include card;
	backdrop-filter: blur(5px);
}
#{c(modals shortcutsModal)} #{c(scroller base)} {
	background-color: $middle;
}
#{c(modals shortcutsTitle)} {
	background: $header;
	margin-bottom: 0;
}
#{c(modals shortcutsSubtitle)} {
	background: $header;
	padding-top: 5px;
}
#{c(modals beforeTalkSidebar)} {
	background-color: $side;
}
#{c(modals welcomeToServerMain)}#{c(modals root)} {
	background-color: $middle;
}
#{c(modals contentWarningBody)} {
	#{c(modals contentWarningContent)} {
		margin-left: 0;
	}
	#{c(modals contentWarningHeaderText)} {
		color: $red;
	}
}
#{c(modals contentWarningAnimation)} {
	display: none;
}
#{c(modals toolbar)} {
	background-color: $card;
	box-shadow: none;
	backdrop-filter: blur(5px);
	&:before {
		border-top-color: $card;
	}
}
#{c(modals quickSwitch)} {
	box-shadow: none;
	background-color: $middle;
}
#{c(modals quickSwitchSearch)} {
	box-shadow: none;
	background-color: $card;
}
#{c(modals quickSwitchScroller)} {
	background-color: transparent;
	&::-webkit-scrollbar-track {
		background-color: transparent !important; // !important reason: discord uses important
	}
}
#{c(modals autocomplete)} {
	box-shadow: none;
	#{c(modals autocompleteScroller)} {
		background-color: $middle;
		backdrop-filter: blur(5px);
	}
	#{c(modals autocompleteCategoryHeader)} {
		background-color: $card;
	}
}
#{c(modals autocompleteInner)} {
	backdrop-filter: blur(5px);
}
#{c(modals autocompleteRail)} {
	background-color: $side;
	backdrop-filter: blur(5px);
}
#{c(modals stickerSuggestMask)} > foreignObject {
	mask: none;
}
#{c(modals stickerSuggestMaskBackground)} {
	background-color: $card;
	border-radius: 4px;
}
#{c(modals stickerSuggestBackground)} {
	background-color: $card;
	border: 1px solid $primary;
	box-shadow: none;
	backdrop-filter: blur(5px);
	&:after {
		content: none;
	}
}
:is(#{c(modals timedOutIcon)},#{c(modals timedOutBannerIcon)}) path {
	&[fill="#ED4245"] {
		fill: $red;
    }
}
#{c(modals timedOutSpamBanner)} {
    background-color: $header;
    backdrop-filter: blur(2px);
}
#{c(modals toastsToast)} {
    background-color: $card;
    border-radius: var(--border-radius);
}
#{c(modals toastsIcon)} path {
    &[fill="#3BA55C"] {
        fill: $green;
    }
    &[fill="#ED4245"] {
        fill: $red;
    }
}
#{c(modals searchResultsGroup)}::before {
	content: none;
}
#{c(modals searchDatePicker)} #{c(modals searchCalendarPicker)} {
	:is(#{c(modals reactDatePicker)},#{c(modals reactDPHeader)}) {
		background-color: transparent;
	}
	#{c(modals reactDPDay)} {
		&:is(:hover,#{c(modals reactDPDayOutsideMonth)}:hover,#{c(modals reactDPDaySelected)}::after,#{c(modals reactDPDayKeyboardSelected)}) {
			background-color: $primary;
		}
		&:is(#{c(modals reactDPDayOutsideMonth)},#{c(modals reactDPDayDisabled)},#{c(modals reactDPDayDisabled)}:hover) {
			background-color: transparent;
		}
	}
}
#{c(modals bannedUserModal)} {
	#{c(modals bannedUserHeader)} {
		padding: 20px 16px;
	}
	#{c(modals body)} {
		padding: 20px 8px 20px 16px;
	}
}
#{c(modals purgeBody)} {
	background-color: $middle;
}
#{c(modals addRoleContainer)},
#{c(modals emojiStickerPopoutContainer)},
#{c(modals openThreadsPopout)} {
	background-color: $card;
	backdrop-filter: blur(5px);
}
#{c(modals emojiStickerLoadingForeground)} {
	background-image: linear-gradient(90deg, $primary, $secondary, $primary);
}
#{c(modals boostSelectGuild)}:hover {
	background-color: var(--background-modifier-hover);
}
#{c(modals textContainer)} {
	background-color: $card;
	border: none;
}
#{c(modals openThreadsModal)} {
	background-color: transparent !important; // !important reason: css uses important FOR SOME REASON
}
#{c(modals openThreadsModalThreadContainer)} {
	@include card;
	&:hover {
		border-color: $hover;
	}
}
#{c(modals activitiesItem)} {
	background-color: $card;
	box-shadow: none;
}
#{c(modals uploadContentCircle)} {
	background-color: $primary;
}
#{c(modals uploadGifPicker)} {
	padding-top: 0;
}

#{c(modals autocompleteCategorySelected)},
#{c(modals autocompleteEmojiInner)},
#{c(modals createEventProgressBar)},
#{c(modals createEventRSVPCount)},
#{c(modals welcomeToServerOption)},
#{c(modals problemInfoRoot)},
#{c(modals timedOutContainer)},
#{c(modals textContainer)}~#{c(embeds textFooter)},
:is(#{c(modals autocompleteCategorySelected)},#{c(modals welcomeToServerOption)},#{c(modals activitiesItem)}):hover,
#{c(modals activitiesTag)},
#{c(modals uploadOptionBox)},
#{c(modals boostSubscription)} {
	background-color: $card;
}

#{c(modals emojiStickerGuildSection)},
#{c(modals scrollTierBackground)},
#{c(modals openThreadsModalBrowserContainer)},
#{c(modals searchDatePicker)} #{c(modals searchCalendarPicker)} :is(#{c(modals reactDatePicker)},#{c(modals reactDPHeader)}),
#{c(modals timedOutIconContainer)},
#{c(modals autocompleteRailInner)},
#{c(modals beforeTalkBody)},
#{c(modals eventInfoGuildIcon)} {
	background-color: transparent;
}

#{c(modals createEventTextInput)},
#{c(modals beforeTalkFieldWrapper)} {
	@include card;
}